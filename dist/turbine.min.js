import{MersenneTwister}from"mersenne-twister";var XMLHttpRequest=require("xhr2");export class Turbine{constructor(e="http://localhost:63101"){this.syscall_out_url=e;this.mersenneTwister=new MersenneTwister}waitForReady=function(t=600){return new Promise((e,r)=>{setTimeout(()=>{e(true)},t)})};query=function(n=1,e=2,t=4,i=100){if(n>=e||t<1||i<0){throw new RangeError("Turbine.query: Arguments invalid")}var s=[];var u=e-n+1;for(let e=0;e<u;e++){s[e]=0}var o=()=>{let e=(new Date).getTime().toString();this.mersenneTwister.init_string(e);let r=this.mersenneTwister.ranged_random(0,u-1);s[r]++;if(s[r]>=t)return r;return-1};return new Promise((r,e)=>{var t=()=>{this.yield();setTimeout(()=>{let e=o();if(e>-1)return r(e+n);t()},i)};t()})};queryFailed=function(e){return typeof e==="boolean"};yield=function(){var e=new XMLHttpRequest;e.open("GET",this.syscall_out_url);e.send(null)}}export default Turbine;