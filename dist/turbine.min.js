import{MersenneTwister}from"mersenne-twister";class Turbine{constructor(e="http://localhost:63101"){this.syscall_out_url=e;this.mersenneTwister=MersenneTwister()}waitForReady=function(t=600){return new Promise((e,r)=>{setTimeout(()=>{e(true)},t)})};query=function(n=1,e=2,t=4,i=100){if(n>=e||t<1||i<0){throw new RangeError("Turbine.query: Arguments invalid")}var u=[];var s=e-n+1;for(let e=0;e<s;e++){u[e]=0}function runBucket(){let e=(new Date).getTime().toString();__turbine_Mersenne.init_string(e);let r=__turbine_Mersenne.ranged_random(0,s-1);u[r]++;if(u[r]>=t)return r;return-1}return new Promise((r,e)=>{var t=()=>{this.turbineYield();setTimeout(()=>{let e=runBucket();if(e>-1)return r(e+n);t()},i)};t()})};queryFailed=function(e){return typeof e==="boolean"};yield=function(){var e=new XMLHttpRequest;e.open("GET",this.syscall_out_url);e.send(null)}}export default Turbine;